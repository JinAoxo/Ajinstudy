//1️⃣ SASS 문법 1 : 값을 저장해놓고 쓰는 '변수' 
// (test.scss) 
$메인색상 : #2a4c6e;
$서브색상 : #333333;

%text {
	color: $메인색상
}

%box {
	background: $서브색상
}

// (test.scss)
$기본사이즈 : 16px;

%box {
	font-size: $기본사이즈 + 2px;
	width: (100px * 2);
	height: (300px / 3)
}

//======================================================
//2️⃣ Sass 문법 2. 셀렉터 대신 쓰는 Nesting
//======================================================
//3️⃣ Sass 문법 3. 이미 있는 클래스를 확장하는 @extend 

%btn {
	font-size: 16px;
	padding: 10px;
	background: grey;
}

%btn-green {
	@extend .btn; //❗❗ 
	background: green;
}

// ❗❗ '%' 기호는 .대신 쓸 수 있는 임시클래스인데
// CSS파일에서 클래스로 컴파일하지 않고싶을 때 쓰는 기호

//======================================================
//4️⃣ Sass 문법 4. 코드를 한단어로 축약하는 @mixin

@mixin 버튼기본디자인() {
	font-size: 16px;
	padding: 10px;
}

%btn-green {
	@include 버튼기본디자인();
	background: green;
}

//==========================

@mixin 버튼기본디자인($구멍) {
	font-size: 16px;
	padding: 10px;
	background: $구멍;
}

%btn-green {
	@include 버튼기본디자인(#229f72);
}

//======================================================
//5️⃣ Sass 문법 5. @use와 언더바 파일 : @use 해온 다른 파일에 있던 $변수와 @mixin을 가져다 쓸 수 있음

// @use 'reset.scss';
// @use '_reset.scss';
//언더바 _기호를 파일명 맨앞에 사용하시면 "이 파일은 CSS파일로 따로 컴파일하지 말아주세요" 